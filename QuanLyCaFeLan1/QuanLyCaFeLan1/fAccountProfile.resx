<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IScAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATeYmFE3g
        If9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03g
        If9N4CH/Tt4hJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABN5iYUTeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03g
        If9N4CH/TeAh/03gIf9N4CLoTt8hoUviIT0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAE3mJhRN4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03g
        If9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIaJV3SIPAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAATeYmFE3gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03g
        If9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TN8hsU3gIfRN4CH/TeAh/03gIc5N5iYUAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABN5iYUTeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03g
        If9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9O3iEnTeYmFE3gIK1N4CH/TeAh/03g
        IcNmzDMFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE3mJhRN4CH/TeAh/03gIf9N4CH/TeAh/03g
        If9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/07eIScAAAAAAP8AAUzf
        IpBN4CH/TeAh/03gIXsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATeYmFE3gIf9N4CH/TeAh/03g
        If9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/Tt4hJwAA
        AAAAAAAAVf8AA03gIcZN4CH/TeAh9EfjHBIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABN5iYUTeAh/03g
        If9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03g
        If9O3iEnAAAAAAAAAAAAAAAATd8gOE3gIf9N4CH/TeAhYwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE3m
        JhRN4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03g
        If9N4CH/TeAh/07eIScAAAAAAAAAAAAAAAAAAAAATeAh8U3gIf9N4CGEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATeYmFE3gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03g
        If9N4CH/TeAh/03gIf9N4CH/Tt4hJwAAAAAAAAAAAAAAAFHkGxNN4CH9TeAh/03fInEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABN5iYUTeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03g
        If9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9O4CJSS+EjM0/gIzpO4iFOTeAhvE3gIf9N4CH/St0iJgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAE3mJhRN4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03g
        If9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03g
        IK0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATeYmFE3gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03g
        If9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03g
        Ie9N4CGMRugXCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABN5iYUTeAh/03gIf9N4CH/TeAh/03g
        If9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9P3yJhT+EiREvi
        IT1N3yAoVdUrBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE3mJhRN4CH/TeAh/03g
        If9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/07e
        IScAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAR+McEk3g
        If9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03gIf9N4CH/TeAh/03g
        If9N4CH/TuMjJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATeEhqE3gIetN4CHuTeAh7k3gIe5N4CHuTeAh7k3gIe5N4CHuTeAh7k3gIe5N4CHuTeAh7k3g
        Ie5N4CHuTeAh7U3gIbNV/wADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABP3CMdTuAhzE7gIcxO4CGUAAAAAErd
        IiZO4CHMTuAhzE/gIzoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE7YJw1N4CH/TeAh/03h
        IcEAAAAASdskDk3gIfdN4CH/TuIiNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE7g
        IdlN4CH/TeAh9lXdIg8AAAAATOAhfE3gIf9O4CF9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATt8gX03gIf9N4CH/TeEinwAAAAAAAAAATd8iiE3gIemA/wACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAATeAiak3gIfJN4CH/TeAhkgAAAACA/wACTuAhz07YJw0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUuAfGU7fIaFN4CH/Td8gcAAAAABM4SFeAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE3gIXRN4CHvVdUrBmbM
        MwUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE3h
        IbBP3yA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAT+AjOk3gH0kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAA/wABTeAfIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPgAA//4AAP/+AAD//gAA//4AAP/+AAA//gAAD/4AAAf+AADD/gA
        A4/4AAPH+AAD5/gAA+P4AAPn+AADx/gAAAf4AAAP+AAD//gAA//4AAP/+AAD////////xn///8Z////H
        f///4z////G////5/////v////7/////////////
</value>
  </data>
</root>